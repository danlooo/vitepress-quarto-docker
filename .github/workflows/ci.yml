name: CI
on:
  push:
    branches: [main]
    workflow_dispatch:
permissions:
  contents: read
  packages: write
  pages: write
  id-token: write
concurrency:
  group: pages
  cancel-in-progress: false
jobs:
  build-binder:
    runs-on: ubuntu-latest
    steps:
      - uses: s-weigand/trigger-mybinder-build@v1
        with:
          target-repo: ${{ github.event.repository.full_name}}/HEAD
  build-website:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Build and push docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ghcr.io/${{ vars.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest,  ${{ vars.DOCKER_USERNAME }}/${{ github.event.repository.name }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ vars.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest
          cache-to: type=inline
      - name: Render quarto
        run: |
          docker run \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v $PWD/docs:/work  \
            ${{ vars.DOCKER_USERNAME }}/${{ github.event.repository.name }} \
            quarto render .
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm # or pnpm / yarn
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Install dependencies
        run: npm ci
      - name: Build with VitePress
        run: npm run docs:build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .vitepress/dist
  deploy-website:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build-website
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
